{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventPage.js\",\n  _s = $RefreshSig$();\nimport { Await, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n\n  // Assuming the loader returns an object with an 'events' property.\n  // The use LoaderData hook retrieves data loaded by the loader function in the route configuration.\n  // we can use useLoaderData() in the elements that assigned to a route and in all components that might be used inside that element.\n  // We can not use the useLoader to the higher level components that we are fetching the data.\n  return /*#__PURE__*/_jsxDEV(Await, {\n    resolve: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //...\n    // return {\n    //   isError: true,\n    //   message: \"Could not fetch events.\",\n    // };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    }));\n  } else {\n    return response;\n  }\n};\n\n// this loader code is excuted in the browser, not in the server.\n// Any default brower feature can be used in this loader  but not the react hooks.\nexport const loaderHandler = () => {\n  return {\n    events: loadEvents()\n  };\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["Await","useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","resolve","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvents","response","fetch","ok","Response","JSON","stringify","message","status","loaderHandler","$RefreshReg$"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventPage.js"],"sourcesContent":["import { Await, useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nconst EventsPage = () => {\n  const { events } = useLoaderData();\n\n  // Assuming the loader returns an object with an 'events' property.\n  // The use LoaderData hook retrieves data loaded by the loader function in the route configuration.\n  // we can use useLoaderData() in the elements that assigned to a route and in all components that might be used inside that element.\n  // We can not use the useLoader to the higher level components that we are fetching the data.\n  return <Await resolve={events}></Await>;\n};\n\nexport default EventsPage;\n\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //...\n    // return {\n    //   isError: true,\n    //   message: \"Could not fetch events.\",\n    // };\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n    //   status: 500,\n    // });\n    throw new Response(\n      JSON.stringify(\n        { message: \"Could not fetch events\" },\n        {\n          status: 500,\n        }\n      )\n    );\n  } else {\n    return response;\n  }\n};\n\n// this loader code is excuted in the browser, not in the server.\n// Any default brower feature can be used in this loader  but not the react hooks.\nexport const loaderHandler = () => {\n  return { events: loadEvents() };\n};\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,aAAa,QAAQ,kBAAkB;AACvD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAO,CAAC,GAAGN,aAAa,CAAC,CAAC;;EAElC;EACA;EACA;EACA;EACA,oBAAOG,OAAA,CAACJ,KAAK;IAACQ,OAAO,EAAED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AACzC,CAAC;AAACN,EAAA,CARID,UAAU;EAAA,QACKJ,aAAa;AAAA;AAAAY,EAAA,GAD5BR,UAAU;AAUhB,eAAeA,UAAU;AAEzB,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CACZ;MAAEC,OAAO,EAAE;IAAyB,CAAC,EACrC;MACEC,MAAM,EAAE;IACV,CACF,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAOP,QAAQ;EACjB;AACF,CAAC;;AAED;AACA;AACA,OAAO,MAAMQ,aAAa,GAAGA,CAAA,KAAM;EACjC,OAAO;IAAEhB,MAAM,EAAEO,UAAU,CAAC;EAAE,CAAC;AACjC,CAAC;AAAC,IAAAD,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}