{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/NewEventPage.js\";\nimport { redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport const actionHandler = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const eventData = {\n    title: formData.get(\"title\"),\n    image: formData.get(\"image\"),\n    date: formData.get(\"date\"),\n    description: formData.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch details for selected events\"\n    }), {\n      status: 500\n    });\n  }\n  return redirect(\"events\");\n};\n\n// export const actionHandler = async ({ request, params }) => {\n//   const formData = await request.formData();\n//   const eventData = {\n//     title: formData.get(\"title\"),\n//     image: formData.get(\"image\"),\n//     date: formData.get(\"date\"),\n//     description: formData.get(\"description\"),\n//   };\n\n//   fetch(\"http://localhost:8080/events\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(eventData),\n//   });\n//   if (!Response.ok) {\n//     throw new Response(\n//       JSON.stringify(\n//         { message: \"Could not fetch deatails for selected events\" },\n//         {\n//           status: 500,\n//         }\n//       )\n//     );\n//   }\n//   return redirect(\"events\");\n// };\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","actionHandler","request","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","Response","message","status","$RefreshReg$"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import { redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\n\nconst NewEventPage = () => {\n  return <EventForm />;\n};\nexport default NewEventPage;\n\nexport const actionHandler = async ({ request }) => {\n  const formData = await request.formData();\n  const eventData = {\n    title: formData.get(\"title\"),\n    image: formData.get(\"image\"),\n    date: formData.get(\"date\"),\n    description: formData.get(\"description\"),\n  };\n\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(eventData),\n  });\n\n  if (!response.ok) {\n    throw new Response(\n      JSON.stringify({\n        message: \"Could not fetch details for selected events\",\n      }),\n      {\n        status: 500,\n      }\n    );\n  }\n  return redirect(\"events\");\n};\n\n// export const actionHandler = async ({ request, params }) => {\n//   const formData = await request.formData();\n//   const eventData = {\n//     title: formData.get(\"title\"),\n//     image: formData.get(\"image\"),\n//     date: formData.get(\"date\"),\n//     description: formData.get(\"description\"),\n//   };\n\n//   fetch(\"http://localhost:8080/events\", {\n//     method: \"POST\",\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(eventData),\n//   });\n//   if (!Response.ok) {\n//     throw new Response(\n//       JSON.stringify(\n//         { message: \"Could not fetch deatails for selected events\" },\n//         {\n//           status: 500,\n//         }\n//       )\n//     );\n//   }\n//   return redirect(\"events\");\n// };\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB,CAAC;AAACC,EAAA,GAFIL,YAAY;AAGlB,eAAeA,YAAY;AAE3B,OAAO,MAAMM,aAAa,GAAG,MAAAA,CAAO;EAAEC;AAAQ,CAAC,KAAK;EAClD,MAAMC,QAAQ,GAAG,MAAMD,OAAO,CAACC,QAAQ,CAAC,CAAC;EACzC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEF,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC;IAC5BC,KAAK,EAAEJ,QAAQ,CAACG,GAAG,CAAC,OAAO,CAAC;IAC5BE,IAAI,EAAEL,QAAQ,CAACG,GAAG,CAAC,MAAM,CAAC;IAC1BG,WAAW,EAAEN,QAAQ,CAACG,GAAG,CAAC,aAAa;EACzC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAChC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAChBH,IAAI,CAACC,SAAS,CAAC;MACbG,OAAO,EAAE;IACX,CAAC,CAAC,EACF;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH;EACA,OAAO7B,QAAQ,CAAC,QAAQ,CAAC;AAC3B,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAS,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}