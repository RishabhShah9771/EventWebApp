{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  // To access the higher level data, we can use the useRouteLoaderData hook and need to pass id to it so we can access the data from loader function.\n  // The useLoaderData hook retrieves data loaded by the loader function in the route configuration.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetail, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport const loaderHandler = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    return JSON.stringify({\n      message: \"Could not fetch deatails for selected events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nexport const actionHandler = async ({}) => {};\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loaderHandler","request","params","id","eventId","response","fetch","ok","JSON","stringify","message","status","actionHandler","$RefreshReg$"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nconst EventDetail = () => {\n  const data = useRouteLoaderData(\"event-detail\");\n  // To access the higher level data, we can use the useRouteLoaderData hook and need to pass id to it so we can access the data from loader function.\n  // The useLoaderData hook retrieves data loaded by the loader function in the route configuration.\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  );\n};\n\nexport default EventDetail;\n\nexport const loaderHandler = async ({ request, params }) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    return JSON.stringify(\n      { message: \"Could not fetch deatails for selected events\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n};\nexport const actionHandler = async ({}) => {};\n"],"mappings":";;AAAA,SAASA,kBAAkB,QAAQ,kBAAkB;AACrD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAC/C;EACA;EACA,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP,CAAC;AAACP,EAAA,CATID,WAAW;EAAA,QACFN,kBAAkB;AAAA;AAAAe,EAAA,GAD3BT,WAAW;AAWjB,eAAeA,WAAW;AAE1B,OAAO,MAAMU,aAAa,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAC1D,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOC,IAAI,CAACC,SAAS,CACnB;MAAEC,OAAO,EAAE;IAA+C,CAAC,EAC3D;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAON,QAAQ;EACjB;AACF,CAAC;AACD,OAAO,MAAMO,aAAa,GAAG,MAAAA,CAAO,CAAC,CAAC,KAAK,CAAC,CAAC;AAAC,IAAAb,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}