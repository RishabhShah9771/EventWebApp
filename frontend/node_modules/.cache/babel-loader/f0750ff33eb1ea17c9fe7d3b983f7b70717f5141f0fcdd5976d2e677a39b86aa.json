{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const data = useLoaderData();\n  const events = data.events; // Assuming the loader returns an object with an 'events' property.\n  // The use LoaderData hook retrieves data loaded by the loader function in the route configuration.\n  // we can use useLoaderData() in the elements that assigned to a route and in all components that might be used inside that element.\n  // We can not use the useLoader to the higher level components that we are fetching the data.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport const loaderHandler = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //...\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loaderHandler","response","fetch","ok","$RefreshReg$"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventPage.js"],"sourcesContent":["import { useLoaderData } from \"react-router-dom\";\nimport EventsList from \"../components/EventsList\";\n\nconst EventsPage = () => {\n  const data = useLoaderData();\n  const events = data.events; // Assuming the loader returns an object with an 'events' property.\n  // The use LoaderData hook retrieves data loaded by the loader function in the route configuration.\n  // we can use useLoaderData() in the elements that assigned to a route and in all components that might be used inside that element.\n  // We can not use the useLoader to the higher level components that we are fetching the data.\n  return (\n    <>\n      <EventsList events={events} />\n    </>\n  );\n};\n\nexport default EventsPage;\n\nexport const loaderHandler = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    //...\n  } else {\n    return response;\n  }\n};\n"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM,CAAC,CAAC;EAC5B;EACA;EACA;EACA,oBACEN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA,CAACF,UAAU;MAACQ,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP,CAAC;AAACP,EAAA,CAXID,UAAU;EAAA,QACDN,aAAa;AAAA;AAAAe,EAAA,GADtBT,UAAU;AAahB,eAAeA,UAAU;AAEzB,OAAO,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAC5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;EAAA,CACD,MAAM;IACL,OAAOF,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAF,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}