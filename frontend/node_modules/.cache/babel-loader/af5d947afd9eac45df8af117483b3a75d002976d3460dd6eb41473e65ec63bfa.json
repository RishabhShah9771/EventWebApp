{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: params\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetail;\nexport default EventDetail;\nexport const loaderHandler = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    return JSON.stringify({\n      message: \"Could not fetch events\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["useParams","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","params","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loaderHandler","request","id","eventId","response","fetch","ok","JSON","stringify","message","status","$RefreshReg$"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nconst EventDetail = () => {\n  const params = useParams();\n  return (\n    <>\n      <EventItem event={params} />\n    </>\n  );\n};\n\nexport default EventDetail;\n\nexport const loaderHandler = async ({ request, params }) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    return JSON.stringify(\n      { message: \"Could not fetch events\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    return response;\n  }\n};\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAChD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAGR,SAAS,CAAC,CAAC;EAC1B,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC5B,CAAC;AAEP,CAAC;AAACP,EAAA,CAPID,WAAW;EAAA,QACAN,SAAS;AAAA;AAAAe,EAAA,GADpBT,WAAW;AASjB,eAAeA,WAAW;AAE1B,OAAO,MAAMU,aAAa,GAAG,MAAAA,CAAO;EAAEC,OAAO;EAAET;AAAO,CAAC,KAAK;EAC1D,MAAMU,EAAE,GAAGV,MAAM,CAACW,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,OAAOC,IAAI,CAACC,SAAS,CACnB;MAAEC,OAAO,EAAE;IAAyB,CAAC,EACrC;MACEC,MAAM,EAAE;IACV,CACF,CAAC;EACH,CAAC,MAAM;IACL,OAAON,QAAQ;EACjB;AACF,CAAC;AAAC,IAAAL,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}