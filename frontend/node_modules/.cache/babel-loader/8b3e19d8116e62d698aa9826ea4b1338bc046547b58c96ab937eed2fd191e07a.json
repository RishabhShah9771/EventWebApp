{"ast":null,"code":"var _jsxFileName = \"/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetail = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  // To access the higher level data, we can use the useRouteLoaderData hook and need to pass id to it so we can access the data from loader function.\n  // The useLoaderData hook retrieves data loaded by the loader function in the route configuration.\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: [\" \", loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetail, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetail;\nexport default EventDetail;\nconst loadEvent = async id => {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    return JSON.stringify({\n      message: \"Could not fetch deatails for selected events\"\n    }, {\n      status: 500\n    });\n  } else {\n    const responseData = await response.json();\n    return responseData.events;\n  }\n};\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events\"\n    }), {\n      status: 500\n    });\n  } else {\n    const responseData = await response.json();\n    return responseData.events;\n  }\n};\nexport const loaderHandler = async ({\n  request,\n  params\n}) => {\n  const id = params.eventId;\n  return {\n    event: loadEvent(id),\n    events: loadEvents()\n  };\n};\nexport const actionHandler = async ({\n  request,\n  params\n}) => {\n  const response = await fetch(\"http://localhost:8080/events/\" + params.eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Could not delete event\"\n    }, {\n      status: 500\n    }));\n  }\n  return redirect(\"/events\");\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetail\");","map":{"version":3,"names":["Await","redirect","useRouteLoaderData","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetail","_s","event","events","children","resolve","loadedEvent","fileName","_jsxFileName","lineNumber","columnNumber","loadedEvents","_c","loadEvent","id","response","fetch","ok","JSON","stringify","message","status","responseData","json","loadEvents","Response","loaderHandler","request","params","eventId","actionHandler","method","$RefreshReg$"],"sources":["/Users/rishabhshah/Downloads/React Projects/React Projects/ReactEventApplication(Advance Router-DOM)/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { Await, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { Suspense } from \"react\";\nconst EventDetail = () => {\n  const { event, events } = useRouteLoaderData(\"event-detail\");\n  // To access the higher level data, we can use the useRouteLoaderData hook and need to pass id to it so we can access the data from loader function.\n  // The useLoaderData hook retrieves data loaded by the loader function in the route configuration.\n  return (\n    <>\n      <Suspense>\n        <Await resolve={event}>\n          {(loadedEvent) => <EventItem event={loadedEvent} />}\n        </Await>\n      </Suspense>\n      <Suspense>\n        <Await resolve={events}>\n          {\" \"}\n          {(loadedEvents) => <EventsList events={loadedEvents} />}\n        </Await>\n      </Suspense>\n    </>\n  );\n};\n\nexport default EventDetail;\n\nconst loadEvent = async (id) => {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n\n  if (!response.ok) {\n    return JSON.stringify(\n      { message: \"Could not fetch deatails for selected events\" },\n      {\n        status: 500,\n      }\n    );\n  } else {\n    const responseData = await response.json();\n    return responseData.events;\n  }\n};\n\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\n      status: 500,\n    });\n  } else {\n    const responseData = await response.json();\n    return responseData.events;\n  }\n};\n\nexport const loaderHandler = async ({ request, params }) => {\n  const id = params.eventId;\n  return { event: loadEvent(id), events: loadEvents() };\n};\n\nexport const actionHandler = async ({ request, params }) => {\n  const response = await fetch(\n    \"http://localhost:8080/events/\" + params.eventId,\n    {\n      method: request.method,\n    }\n  );\n  if (!response.ok) {\n    throw new Response(\n      JSON.stringify(\n        { message: \"Could not delete event\" },\n        {\n          status: 500,\n        }\n      )\n    );\n  }\n  return redirect(\"/events\");\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}